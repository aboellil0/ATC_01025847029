@page "/login"
@inject NavigationManager NavigationManager
@inject HttpClient Http

<div class="auth-container">
    <div class="auth-card">
        <div class="auth-header">
            <h2>Log In to TicketsCandy</h2>
            <p>Welcome back! Please enter your details.</p>
        </div>

        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">Email</label>
                <InputText id="email" type="email" class="form-control" @bind-Value="loginModel.Email" />
                <ValidationMessage For="@(() => loginModel.Email)" />
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>

            <div class="form-options">
                <label class="checkbox-container">
                    <input type="checkbox" @bind="rememberMe" />
                    <span class="checkmark"></span>
                    Remember me
                </label>
                <a href="/forgot-password" class="forgot-link">Forgot password?</a>
            </div>

            <button type="submit" class="auth-button login-button">
                Log In
            </button>
        </EditForm>

        <button class="auth-button google-button">
            <img src="images/google-icon.svg" alt="Google" />
            <span>Sign in with Google</span>
        </button>

        <div class="auth-footer">
            <p>Don't have an account? <a href="/signup" @onclick:preventDefault="true" @onclick="NavigateToSignup">Sign up</a></p>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private bool rememberMe;

    private class LoginModel
    {
        public string Email { get; set; }
        public string Password { get; set; }
    }

    private async Task HandleLogin()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/auth/login", loginModel);
            if (response.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/");
            }
        }
        catch (Exception)
        {
            // Handle error
        }
    }

    private void NavigateToSignup()
    {
        NavigationManager.NavigateTo("/signup");
    }
}